"use strict";(self.webpackChunkelemental_docs=self.webpackChunkelemental_docs||[]).push([[323],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>p});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),u=s(t),p=a,d=u["".concat(l,".").concat(p)]||u[p]||h[p]||o;return t?r.createElement(d,i(i({ref:n},m),{},{components:t})):r.createElement(d,i({ref:n},m))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9996:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_label:"Inventory Management",title:""},i=void 0,c={unversionedId:"inventory-management",id:"inventory-management",title:"",description:"Redirecting to https://elemental.docs.rancher.com",source:"@site/docs/inventory-management.md",sourceDirName:".",slug:"/inventory-management",permalink:"/elemental/inventory-management",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Inventory Management",title:""},sidebar:"elemental",previous:{title:"Smbios",permalink:"/elemental/smbios"},next:{title:"Backup",permalink:"/elemental/backup"}},l={},s=[{value:"Inventory Management",id:"inventory-management",level:2},{value:"MachineInventory",id:"machineinventory",level:3},{value:"Reference",id:"reference",level:4},{value:"MachineRegistration",id:"machineregistration",level:3},{value:"Reference",id:"reference-1",level:4}],m={toc:s};function h(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("meta",{charset:"utf-8"}),(0,a.kt)("title",null,"Redirecting to https://elemental.docs.rancher.com"),(0,a.kt)("meta",{"http-equiv":"refresh",content:"0; URL=https://elemental.docs.rancher.com/"}),(0,a.kt)("link",{rel:"canonical",href:"https://elemental.docs.rancher.com/"})),(0,a.kt)("h2",{id:"inventory-management"},"Inventory Management"),(0,a.kt)("p",null,"The Elemental operator can hold an inventory of machines and\nthe mapping of the machine to it's configuration and assigned cluster."),(0,a.kt)("h3",{id:"machineinventory"},"MachineInventory"),(0,a.kt)("h4",{id:"reference"},"Reference"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: elemental.cattle.io/v1beta1\nkind: MachineInventory\nmetadata:\n  name: machine-a\n  # The namespace must match the namespace of the cluster\n  # assigned to the clusters.provisioning.cattle.io resource\n  namespace: fleet-default\nspec:\n  # The cluster that this machine is assigned to\n  clusterName: some-cluster\n  # The hash of the TPM EK public key. This is used if you are\n  # using TPM2 to identifiy nodes.  You can obtain the TPM by\n  # running `rancherd get-tpm-hash` on the node. Or nodes can\n  # report their TPM hash by using the MachineRegister\n  tpm: d68795c6192af9922692f050b...\n  # Generic SMBIOS fields that are typically populated with\n  # the MachineRegister approach\n  smbios: {}\n  # A reference to a secret that contains a shared secret value to\n  # identify a node.  The secret must be of type "elemental.cattle.io/token"\n  # and have on field "token" which is the value of the shared secret\n  machineTokenSecretName: some-secret-name\n  # Arbitrary cloud config that will be added to the machines cloud config\n  # during the rancherd bootstrap phase.  The one important field that should\n  # be set is the role.\n  config:\n    role: server\n')),(0,a.kt)("h3",{id:"machineregistration"},"MachineRegistration"),(0,a.kt)("h4",{id:"reference-1"},"Reference"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: elemental.cattle.io/v1beta1\nkind: MachineRegistration\nmetadata:\n  name: machine-registration\n  # The namespace must match the namespace of the cluster\n  # assigned to the clusters.provisioning.cattle.io resource\n  namespace: fleet-default\nspec:\n  # Labels to be added to the created MachineInventory object\n  machineInventoryLabels: {}\n  # Annotations to be added to the created MachineInventory object\n  machineInventoryAnnotations: {}\n  # The cloud config that will be used to provision the node\n  cloudConfig: {}\n")))}h.isMDXComponent=!0}}]);